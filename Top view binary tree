class Solution {
      static class Pair {
        Node node;
        int hd;
        Pair(Node node, int hd) {
            this.node = node;
            this.hd = hd;
        }
      }
      
    static ArrayList<Integer> topView(Node root) {
        ArrayList<Integer> result = new ArrayList<>();
        if (root == null) return result;

        Map<Integer, Integer> map = new TreeMap<>();
        Queue<Pair> queue = new LinkedList<>();
        queue.add(new Pair(root, 0));

        while (!queue.isEmpty()) {
            Pair p = queue.poll();
            Node temp = p.node;
            int hd = p.hd;

            if (!map.containsKey(hd)) {
                map.put(hd, temp.data);
            }

            if (temp.left != null) queue.add(new Pair(temp.left, hd - 1));
            if (temp.right != null) queue.add(new Pair(temp.right, hd + 1));
        }

        result.addAll(map.values());
        return result;
    }
}
