class GFG {
    ArrayList<Integer> zigZagTraversal(Node root) {
        ArrayList<Integer> result = new ArrayList<>();
        if (root == null) return result;

        Queue<Node> queue = new LinkedList<>();
        queue.offer(root);
        boolean leftToRight = true;

        while (!queue.isEmpty()) {
            int size = queue.size();
            Integer[] level = new Integer[size];

            for (int i = 0; i < size; i++) {
                Node node = queue.poll();
                int index = leftToRight ? i : (size - 1 - i);
                level[index] = node.data;

                if (node.left != null) queue.offer(node.left);
                if (node.right != null) queue.offer(node.right);
            }
            for (int val : level) {
                result.add(val);
            }
            leftToRight = !leftToRight;
        }

        return result;

    }
}
